{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","weekendsVisible","externalEvents","title","color","id","calendarEvents","start","end","custom","_useState2","_slicedToArray","state","setState","useEffect","draggableEl","document","getElementById","Draggable","itemSelector","eventData","eventEl","getAttribute","console","log","create","React","createElement","className","onClick","newEvent","_objectSpread","concat","class","map","event","data-id","data-color","data-custom","key","style","backgroundColor","borderColor","cursor","FullCalendar","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","bootstrap5Plugin","headerToolbar","left","center","right","initialView","themeSystem","editable","selectable","selectMirror","dayMaxEvents","weekends","events","droppable","eventReceive","eventInfo","draggedEl","allDay","rootElement","ReactDOM","render","StrictMode"],"mappings":"gRAae,SAASA,IAEtB,IAAAC,EAA0BC,mBAAS,CACjCC,iBAAiB,EACjBC,eAAgB,CACd,CACEC,MAAO,qBACPC,MAAO,UACPC,GAAI,GAEN,CAAEF,MAAO,UAAWC,MAAO,UAAWC,GAAI,GAC1C,CAAEF,MAAO,qBAAsBC,MAAO,UAAWC,GAAI,GACrD,CAAEF,MAAO,qBAAsBC,MAAO,UAAWC,GAAI,IAEvDC,eAAgB,CACd,CACED,GAAI,EACJF,MAAO,YACPC,MAAO,UACPG,MAAO,aACPC,IAAK,aACLC,OAAQ,+BAEV,CACEJ,GAAI,EACJF,MAAO,QACPC,MAAO,UACPG,MAAO,cAET,CACEF,GAAI,EACJF,MAAO,kBACPC,MAAO,UACPG,MAAO,cAET,CACEF,GAAI,EACJF,MAAO,iBACPC,MAAO,UACPG,MAAO,aACPC,IAAK,cAEP,CACEH,GAAI,EACJF,MAAO,mBACPC,MAAO,UACPG,MAAO,iBAGXG,EAAAC,YAAAZ,EAAA,GA/CKa,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAkDtBI,qBAAU,WACR,IAAIC,EAAcC,SAASC,eAAe,mBAC1C,IAAIC,IAAUH,EAAa,CACzBI,aAAc,YACdC,UAAW,SAAUC,GACnB,IAAIhB,EAAKgB,EAAQC,aAAa,WAC1BnB,EAAQkB,EAAQC,aAAa,SAC7BlB,EAAQiB,EAAQC,aAAa,cAC7Bb,EAASY,EAAQC,aAAa,eAElC,OADAC,QAAQC,IAAI,iBAAkBnB,EAAIF,EAAOC,EAAOK,GACzC,CACLJ,GAAIA,EACJF,MAAOA,EACPC,MAAOA,EACPK,OAAQA,EACRgB,QAAQ,QAIb,IAqCH,OACEC,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,kCACbF,IAAAC,cAAA,MAAIC,UAAU,WAAU,iBACxBF,IAAAC,cAAA,UAAI,6BAEND,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UACEC,UAAU,8CACVC,QA7CK,WACf,IAAIC,EAAW,CACb3B,MAAO,cACPC,MAAO,UACPG,MAAO,aACPC,IAAK,cAGPK,GAAS,SAACD,GACR,OAAAmB,wBAAA,GACKnB,GAAK,IACRV,eAAgBU,EAAMV,eAAe8B,OAAOF,UAoCtCJ,IAAAC,cAAA,KAAGM,MAAM,eAAiB,mBAI9BP,IAAAC,cAAA,OAAKtB,GAAG,mBACLO,EAAMV,eAAegC,KAAI,SAACC,GAAK,OAC9BT,IAAAC,cAAA,OACEC,UAAU,uEACVzB,MAAOgC,EAAMhC,MACbiC,UAASD,EAAM9B,GACfgC,aAAYF,EAAM/B,MAClBkC,cAAaH,EAAM1B,OACnB8B,IAAKJ,EAAM9B,GACXmC,MAAO,CACLC,gBAAiBN,EAAM/B,MACvBsC,YAAaP,EAAM/B,MACnBuC,OAAQ,YAGVjB,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,WACED,IAAAC,cAAA,cAASQ,EAAMhC,QAEhBgC,EAAM1B,cAMjBiB,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAACiB,IAAY,CACXC,QAAS,CACPC,IACAC,IACAC,IACAC,KAEFC,cAAe,CACbC,KAAM,kBACNC,OAAQ,QACRC,MAAO,yCAETC,YAAY,eACZC,YAAY,aACZC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,SAAUhD,EAAMX,gBAChB4D,OAAQjD,EAAMN,eACdwD,WAAW,EACXC,aAjFiB,SAACC,GAC1BzC,QAAQC,IAAI,iBAAkBwC,GAC9B,IAAMlC,EAAW,CAEf3B,MAAO6D,EAAUC,UAAU3C,aAAa,SACxClB,MAAO4D,EAAUC,UAAU3C,aAAa,cACxCf,MAAOyD,EAAU7B,MAAM5B,MACvB2D,QAAQ,EACRzD,OAAQuD,EAAUC,UAAU3C,aAAa,gBAE3CC,QAAQC,IAAIM,GACZjB,EAAQkB,wBAAC,GACJnB,GAAK,IACRN,eAAgBM,EAAMN,eAAe0B,OAAOF,YChHlD,IAAMqC,EAAcnD,SAASC,eAAe,QAC5CmD,IAASC,OACP3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAAC7B,EAAG,OAENqE,K","file":"static/js/main.d25f815e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport bootstrap5Plugin from \"@fullcalendar/bootstrap5\";\n// import listPlugin from \"@fullcalendar/list\";\n// import \"@fullcalendar/bootstrap5/main.css\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nexport default function App() {\n  // initial state\n  const [state, setState] = useState({\n    weekendsVisible: true,\n    externalEvents: [\n      {\n        title: \"New Event Planning\",\n        color: \"#34C38F\",\n        id: 1,\n      },\n      { title: \"Meeting\", color: \"#50A5F1\", id: 2 },\n      { title: \"Generating Reports\", color: \"#f1b44c\", id: 3 },\n      { title: \"Create a new theme\", color: \"#f46a6a\", id: 4 },\n    ],\n    calendarEvents: [\n      {\n        id: 5,\n        title: \"Log Event\",\n        color: \"#34C38F\",\n        start: \"2023-07-30\",\n        end: \"2023-08-02\",\n        custom: \"questo Ã¨ un campo custom\",\n      },\n      {\n        id: 6,\n        title: \"Lunch\",\n        color: \"#f46a6a\",\n        start: \"2023-08-04\",\n      },\n      {\n        id: 7,\n        title: \"Repeating Event\",\n        color: \"#f1b44c\",\n        start: \"2023-08-08\",\n      },\n      {\n        id: 8,\n        title: \"Birthday Party\",\n        color: \"#50A5F1\",\n        start: \"2023-08-16\",\n        end: \"2023-08-18\",\n      },\n      {\n        id: 9,\n        title: \"Click for google\",\n        color: \"#343a40\",\n        start: \"2023-08-21\",\n      },\n    ],\n  });\n\n  // load external events\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let id = eventEl.getAttribute(\"data-id\");\n        let title = eventEl.getAttribute(\"title\");\n        let color = eventEl.getAttribute(\"data-color\");\n        let custom = eventEl.getAttribute(\"data-custom\");\n        console.log(\"dragable------\", id, title, color, custom);\n        return {\n          id: id,\n          title: title,\n          color: color,\n          custom: custom,\n          create: true,\n        };\n      },\n    });\n  }, []);\n\n  // add external events\n  const addEvent = () => {\n    let newEvent = {\n      title: \"Timed event\",\n      color: \"#333333\",\n      start: \"2020-12-31\",\n      end: \"2020-12-31\",\n    };\n\n    setState((state) => {\n      return {\n        ...state,\n        externalEvents: state.externalEvents.concat(newEvent),\n      };\n    });\n  };\n\n  // handle event receive\n  const handleEventReceive = (eventInfo) => {\n    console.log(\"event---------\", eventInfo);\n    const newEvent = {\n      // id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n      title: eventInfo.draggedEl.getAttribute(\"title\"),\n      color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n      start: eventInfo.event.start,\n      allDay: true,\n      custom: eventInfo.draggedEl.getAttribute(\"data-custom\"),\n    };\n    console.log(newEvent);\n    setState({\n      ...state,\n      calendarEvents: state.calendarEvents.concat(newEvent),\n    });\n  };\n\n  return (\n    <div className=\"App mx-4 my-5\">\n      <div className=\"d-flex justify-content-between\">\n        <h3 className=\"fw-bold\">Full Calendar</h3>\n        <h5>Calendar / Full Calendar</h5>\n      </div>\n      <div className=\"d-flex\">\n        <div className=\"p-3 bg-white w-25\">\n          <div className=\"text-white my-4\">\n            <button\n              className=\"btn create_event container-fluid text-white\"\n              onClick={addEvent}\n            >\n              <i class=\"bi bi-plus\"></i>\n              Create a event\n            </button>\n          </div>\n          <div id=\"external-events\">\n            {state.externalEvents.map((event) => (\n              <div\n                className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n                title={event.title}\n                data-id={event.id}\n                data-color={event.color}\n                data-custom={event.custom}\n                key={event.id}\n                style={{\n                  backgroundColor: event.color,\n                  borderColor: event.color,\n                  cursor: \"pointer\",\n                }}\n              >\n                <div className=\"fc-event-main\">\n                  <div>\n                    <strong>{event.title}</strong>\n                  </div>\n                  {event.custom}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"ms-3 w-100\">\n          <FullCalendar\n            plugins={[\n              dayGridPlugin,\n              timeGridPlugin,\n              interactionPlugin,\n              bootstrap5Plugin,\n            ]}\n            headerToolbar={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n            }}\n            initialView=\"dayGridMonth\"\n            themeSystem=\"bootstrap5\"\n            editable={true}\n            selectable={true}\n            selectMirror={true}\n            dayMaxEvents={true}\n            weekends={state.weekendsVisible}\n            events={state.calendarEvents}\n            droppable={true}\n            eventReceive={handleEventReceive}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}